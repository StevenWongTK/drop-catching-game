{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\drop-catching-game\\\\packages\\\\frontend\\\\src\\\\features\\\\game\\\\Game.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport { Drop } from '../../components/drop/Drop';\nimport { useGame } from './useGame';\nimport { CATCHER_SIZE, DROP_INTERVAL, GAME_DURATION } from './constants';\nimport styled from 'styled-components';\nimport { Catcher } from '../../components/catcher/Catcher';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { endGameAction, isGameFieldOpenedSelector, isGameStartedSelector } from '../../store/slice';\nimport bg1 from '../../assets/bg1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SField = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 500px;\n    height: 500px;\n    border: 1px solid #000;\n    background-image: url(${props => props.src});\n    background-size: cover;\n    overflow: hidden;\n`;\n_c = SField;\nexport const Game = () => {\n  _s();\n  const isGameFieldOpened = useSelector(isGameFieldOpenedSelector);\n  const isGameStarted = useSelector(isGameStartedSelector);\n  const dispatch = useDispatch();\n  const fieldRef = useRef(null);\n  const intervalRef = useRef();\n  const timeoutRef = useRef();\n  const requestRef = useRef(0);\n  const {\n    drops,\n    spawnDrops,\n    catcher,\n    score,\n    onCursorMove,\n    advanceStep\n  } = useGame(fieldRef, requestRef);\n  useEffect(() => {\n    const stop = () => {\n      intervalRef.current && clearInterval(intervalRef.current);\n    };\n    if (isGameStarted) {\n      intervalRef.current = setInterval(spawnDrops, DROP_INTERVAL);\n      timeoutRef.current = setTimeout(() => {\n        dispatch(endGameAction());\n      }, GAME_DURATION);\n    } else {\n      stop();\n    }\n    return () => stop();\n  }, [dispatch, isGameStarted, spawnDrops]);\n  useEffect(() => {\n    const stop = () => {\n      requestRef.current && cancelAnimationFrame(requestRef.current);\n    };\n    if (isGameStarted) {\n      // console.log('looping')\n      requestRef.current = requestAnimationFrame(advanceStep);\n    } else {\n      stop();\n    }\n    return () => stop();\n  }, [advanceStep, isGameStarted]);\n  return isGameFieldOpened ? /*#__PURE__*/_jsxDEV(SField, {\n    src: bg1,\n    ref: fieldRef,\n    onMouseMove: onCursorMove,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Score: ${score}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), drops.map((drop, index) => {\n      return /*#__PURE__*/_jsxDEV(Drop, {\n        ...drop\n      }, `drop-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Catcher, {\n      image: catcher.image,\n      x: catcher.x,\n      y: 400,\n      size: CATCHER_SIZE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Game, \"clPomtpAUF9Fx5azrInm3Rw9oJQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useGame];\n});\n_c2 = Game;\nvar _c, _c2;\n$RefreshReg$(_c, \"SField\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"names":["useEffect","useRef","Drop","useGame","CATCHER_SIZE","DROP_INTERVAL","GAME_DURATION","styled","Catcher","useDispatch","useSelector","endGameAction","isGameFieldOpenedSelector","isGameStartedSelector","bg1","SField","div","props","src","Game","isGameFieldOpened","isGameStarted","dispatch","fieldRef","intervalRef","timeoutRef","requestRef","drops","spawnDrops","catcher","score","onCursorMove","advanceStep","stop","current","clearInterval","setInterval","setTimeout","cancelAnimationFrame","requestAnimationFrame","map","drop","index","image","x"],"sources":["C:/workspace/drop-catching-game/packages/frontend/src/features/game/Game.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\nimport { Drop } from '../../components/drop/Drop'\r\nimport { useGame } from './useGame'\r\nimport { CATCHER_SIZE, DROP_INTERVAL, GAME_DURATION } from './constants'\r\nimport styled from 'styled-components'\r\nimport { Catcher } from '../../components/catcher/Catcher'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    endGameAction,\r\n    isGameFieldOpenedSelector,\r\n    isGameStartedSelector,\r\n} from '../../store/slice'\r\nimport bg1 from '../../assets/bg1.png'\r\n\r\nconst SField = styled.div<{ src: string }>`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 500px;\r\n    height: 500px;\r\n    border: 1px solid #000;\r\n    background-image: url(${(props) => props.src});\r\n    background-size: cover;\r\n    overflow: hidden;\r\n`\r\n\r\nexport const Game = () => {\r\n    const isGameFieldOpened = useSelector(isGameFieldOpenedSelector)\r\n    const isGameStarted = useSelector(isGameStartedSelector)\r\n    const dispatch = useDispatch()\r\n    const fieldRef = useRef<HTMLDivElement>(null)\r\n    const intervalRef = useRef<ReturnType<typeof setInterval>>()\r\n    const timeoutRef = useRef<ReturnType<typeof setTimeout>>()\r\n    const requestRef = useRef<number>(0)\r\n\r\n    const { drops, spawnDrops, catcher, score, onCursorMove, advanceStep } =\r\n        useGame(fieldRef, requestRef)\r\n\r\n    useEffect(() => {\r\n        const stop = () => {\r\n            intervalRef.current && clearInterval(intervalRef.current)\r\n        }\r\n        if (isGameStarted) {\r\n            intervalRef.current = setInterval(spawnDrops, DROP_INTERVAL)\r\n            timeoutRef.current = setTimeout(() => {\r\n                dispatch(endGameAction())\r\n            }, GAME_DURATION)\r\n        } else {\r\n            stop()\r\n        }\r\n        return () => stop()\r\n    }, [dispatch, isGameStarted, spawnDrops])\r\n\r\n    useEffect(() => {\r\n        const stop = () => {\r\n            requestRef.current && cancelAnimationFrame(requestRef.current)\r\n        }\r\n        if (isGameStarted) {\r\n            // console.log('looping')\r\n            requestRef.current = requestAnimationFrame(advanceStep)\r\n        } else {\r\n            stop()\r\n        }\r\n        return () => stop()\r\n    }, [advanceStep, isGameStarted])\r\n\r\n    return isGameFieldOpened ? (\r\n        <SField src={bg1} ref={fieldRef} onMouseMove={onCursorMove}>\r\n            {/* <button onClick={() => setIsStarted(!isGameStarted)}>\r\n                {'start'}\r\n            </button> */}\r\n            <div>{`Score: ${score}`}</div>\r\n            {drops.map((drop, index) => {\r\n                return <Drop key={`drop-${index}`} {...drop} />\r\n            })}\r\n            <Catcher\r\n                image={catcher.image}\r\n                x={catcher.x}\r\n                y={400}\r\n                size={CATCHER_SIZE}\r\n            ></Catcher>\r\n        </SField>\r\n    ) : (\r\n        <></>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}