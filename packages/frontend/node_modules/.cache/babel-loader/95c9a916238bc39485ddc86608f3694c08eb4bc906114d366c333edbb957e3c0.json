{"ast":null,"code":"import { createSlice, createSelector } from '@reduxjs/toolkit';\nconst initialState = {\n  isMenuOpened: true,\n  isLeaderboardOpened: false,\n  isGameFieldOpened: false,\n  isGameStarted: false,\n  isTutorialOpened: false\n};\nconst storeSlice = createSlice({\n  name: 'store',\n  initialState,\n  reducers: {\n    // TODO: Combine some of action later\n    openMenuAction: state => {\n      state.isMenuOpened = true;\n    },\n    closeMenuAction: state => {\n      state.isMenuOpened = false;\n    },\n    openLeaderboardAction: state => {\n      state.isLeaderboardOpened = true;\n    },\n    closeLeaderboardAction: state => {\n      state.isLeaderboardOpened = false;\n    },\n    openGameFieldAction: state => {\n      state.isGameFieldOpened = true;\n    },\n    closeGameFieldAction: state => {\n      state.isGameFieldOpened = true;\n    },\n    startGameAction: state => {\n      state.isGameStarted = true;\n    },\n    endGameAction: state => {\n      state.isGameStarted = false;\n    },\n    openTutorialAction: state => {\n      state.isTutorialOpened = true;\n    },\n    closeTutorialAction: state => {\n      state.isTutorialOpened = false;\n    }\n  }\n});\nconst selfSelector = state => state.store;\nconst isMenuOpenedSelector = createSelector(selfSelector, state => state.isMenuOpened);\nconst isLeaderboardOpenedSelector = createSelector(selfSelector, state => state.isLeaderboardOpened);\nconst isGameFieldOpenedSelector = createSelector(selfSelector, state => state.isGameFieldOpened);\nconst isGameStartedSelector = createSelector(selfSelector, state => state.isGameStarted);\nconst isTutorialOpenedSelector = createSelector(selfSelector, state => state.isTutorialOpened);\nexport const {\n  openMenuAction,\n  closeMenuAction,\n  openLeaderboardAction,\n  closeLeaderboardAction,\n  openGameFieldAction,\n  closeGameFieldAction,\n  startGameAction,\n  endGameAction,\n  openTutorialAction,\n  closeTutorialAction\n} = storeSlice.actions;\nexport { isMenuOpenedSelector, isLeaderboardOpenedSelector, isGameFieldOpenedSelector, isGameStartedSelector, isTutorialOpenedSelector };\nexport default storeSlice.reducer;","map":{"version":3,"names":["createSlice","createSelector","initialState","isMenuOpened","isLeaderboardOpened","isGameFieldOpened","isGameStarted","isTutorialOpened","storeSlice","name","reducers","openMenuAction","state","closeMenuAction","openLeaderboardAction","closeLeaderboardAction","openGameFieldAction","closeGameFieldAction","startGameAction","endGameAction","openTutorialAction","closeTutorialAction","selfSelector","store","isMenuOpenedSelector","isLeaderboardOpenedSelector","isGameFieldOpenedSelector","isGameStartedSelector","isTutorialOpenedSelector","actions","reducer"],"sources":["C:/workspace/drop-catching-game/packages/frontend/src/store/slice.ts"],"sourcesContent":["import { createSlice, createSelector } from '@reduxjs/toolkit'\r\n\r\ninterface IStore {\r\n    isMenuOpened: boolean\r\n    isLeaderboardOpened: boolean\r\n    isGameFieldOpened: boolean\r\n    isGameStarted: boolean\r\n    isTutorialOpened: boolean\r\n}\r\n\r\nconst initialState = {\r\n    isMenuOpened: true,\r\n    isLeaderboardOpened: false,\r\n    isGameFieldOpened: false,\r\n    isGameStarted: false,\r\n    isTutorialOpened: false,\r\n} as IStore\r\n\r\nconst storeSlice = createSlice({\r\n    name: 'store',\r\n    initialState,\r\n    reducers: {\r\n        // TODO: Combine some of action later\r\n        openMenuAction: (state) => {\r\n            state.isMenuOpened = true\r\n        },\r\n        closeMenuAction: (state) => {\r\n            state.isMenuOpened = false\r\n        },\r\n        openLeaderboardAction: (state) => {\r\n            state.isLeaderboardOpened = true\r\n        },\r\n        closeLeaderboardAction: (state) => {\r\n            state.isLeaderboardOpened = false\r\n        },\r\n        openGameFieldAction: (state) => {\r\n            state.isGameFieldOpened = true\r\n        },\r\n        closeGameFieldAction: (state) => {\r\n            state.isGameFieldOpened = true\r\n        },\r\n        startGameAction: (state) => {\r\n            state.isGameStarted = true\r\n        },\r\n        endGameAction: (state) => {\r\n            state.isGameStarted = false\r\n        },\r\n        openTutorialAction: (state) => {\r\n            state.isTutorialOpened = true\r\n        },\r\n        closeTutorialAction: (state) => {\r\n            state.isTutorialOpened = false\r\n        },\r\n    },\r\n})\r\n\r\nconst selfSelector = (state: { store: IStore }) => state.store\r\nconst isMenuOpenedSelector = createSelector(\r\n    selfSelector,\r\n    (state: IStore) => state.isMenuOpened\r\n)\r\nconst isLeaderboardOpenedSelector = createSelector(\r\n    selfSelector,\r\n    (state: IStore) => state.isLeaderboardOpened\r\n)\r\nconst isGameFieldOpenedSelector = createSelector(\r\n    selfSelector,\r\n    (state: IStore) => state.isGameFieldOpened\r\n)\r\nconst isGameStartedSelector = createSelector(\r\n    selfSelector,\r\n    (state: IStore) => state.isGameStarted\r\n)\r\nconst isTutorialOpenedSelector = createSelector(\r\n    selfSelector,\r\n    (state: IStore) => state.isTutorialOpened\r\n)\r\n\r\nexport const {\r\n    openMenuAction,\r\n    closeMenuAction,\r\n    openLeaderboardAction,\r\n    closeLeaderboardAction,\r\n    openGameFieldAction,\r\n    closeGameFieldAction,\r\n    startGameAction,\r\n    endGameAction,\r\n    openTutorialAction,\r\n    closeTutorialAction,\r\n} = storeSlice.actions\r\nexport {\r\n    isMenuOpenedSelector,\r\n    isLeaderboardOpenedSelector,\r\n    isGameFieldOpenedSelector,\r\n    isGameStartedSelector,\r\n    isTutorialOpenedSelector,\r\n}\r\nexport default storeSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAU9D,MAAMC,YAAY,GAAG;EACjBC,YAAY,EAAE,IAAI;EAClBC,mBAAmB,EAAE,KAAK;EAC1BC,iBAAiB,EAAE,KAAK;EACxBC,aAAa,EAAE,KAAK;EACpBC,gBAAgB,EAAE;AACtB,CAAW;AAEX,MAAMC,UAAU,GAAGR,WAAW,CAAC;EAC3BS,IAAI,EAAE,OAAO;EACbP,YAAY;EACZQ,QAAQ,EAAE;IACN;IACAC,cAAc,EAAGC,KAAK,IAAK;MACvBA,KAAK,CAACT,YAAY,GAAG,IAAI;IAC7B,CAAC;IACDU,eAAe,EAAGD,KAAK,IAAK;MACxBA,KAAK,CAACT,YAAY,GAAG,KAAK;IAC9B,CAAC;IACDW,qBAAqB,EAAGF,KAAK,IAAK;MAC9BA,KAAK,CAACR,mBAAmB,GAAG,IAAI;IACpC,CAAC;IACDW,sBAAsB,EAAGH,KAAK,IAAK;MAC/BA,KAAK,CAACR,mBAAmB,GAAG,KAAK;IACrC,CAAC;IACDY,mBAAmB,EAAGJ,KAAK,IAAK;MAC5BA,KAAK,CAACP,iBAAiB,GAAG,IAAI;IAClC,CAAC;IACDY,oBAAoB,EAAGL,KAAK,IAAK;MAC7BA,KAAK,CAACP,iBAAiB,GAAG,IAAI;IAClC,CAAC;IACDa,eAAe,EAAGN,KAAK,IAAK;MACxBA,KAAK,CAACN,aAAa,GAAG,IAAI;IAC9B,CAAC;IACDa,aAAa,EAAGP,KAAK,IAAK;MACtBA,KAAK,CAACN,aAAa,GAAG,KAAK;IAC/B,CAAC;IACDc,kBAAkB,EAAGR,KAAK,IAAK;MAC3BA,KAAK,CAACL,gBAAgB,GAAG,IAAI;IACjC,CAAC;IACDc,mBAAmB,EAAGT,KAAK,IAAK;MAC5BA,KAAK,CAACL,gBAAgB,GAAG,KAAK;IAClC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMe,YAAY,GAAIV,KAAwB,IAAKA,KAAK,CAACW,KAAK;AAC9D,MAAMC,oBAAoB,GAAGvB,cAAc,CACvCqB,YAAY,EACXV,KAAa,IAAKA,KAAK,CAACT,YAAY,CACxC;AACD,MAAMsB,2BAA2B,GAAGxB,cAAc,CAC9CqB,YAAY,EACXV,KAAa,IAAKA,KAAK,CAACR,mBAAmB,CAC/C;AACD,MAAMsB,yBAAyB,GAAGzB,cAAc,CAC5CqB,YAAY,EACXV,KAAa,IAAKA,KAAK,CAACP,iBAAiB,CAC7C;AACD,MAAMsB,qBAAqB,GAAG1B,cAAc,CACxCqB,YAAY,EACXV,KAAa,IAAKA,KAAK,CAACN,aAAa,CACzC;AACD,MAAMsB,wBAAwB,GAAG3B,cAAc,CAC3CqB,YAAY,EACXV,KAAa,IAAKA,KAAK,CAACL,gBAAgB,CAC5C;AAED,OAAO,MAAM;EACTI,cAAc;EACdE,eAAe;EACfC,qBAAqB;EACrBC,sBAAsB;EACtBC,mBAAmB;EACnBC,oBAAoB;EACpBC,eAAe;EACfC,aAAa;EACbC,kBAAkB;EAClBC;AACJ,CAAC,GAAGb,UAAU,CAACqB,OAAO;AACtB,SACIL,oBAAoB,EACpBC,2BAA2B,EAC3BC,yBAAyB,EACzBC,qBAAqB,EACrBC,wBAAwB;AAE5B,eAAepB,UAAU,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}